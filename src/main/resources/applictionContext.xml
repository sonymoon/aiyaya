<?xml version="1.0" encoding="UTF-8"?>
<beans
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
    http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/aop 
    http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
    default-autowire="byName" default-lazy-init="true">
     
   
    <bean
        id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>org.apache.derby.jdbc.EmbeddedDriver</value>
        </property>
        <property name="url">
            <value>jdbc:derby:f:/zwh/mydb2</value>
        </property>
        <property name="username">
            <value>root</value>
        </property>
        <property name="password">
            <value>root</value>
        </property>
    </bean>
    <bean
        id="sessionFactory"
        class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect"> org.hibernate.dialect.DerbyDialect</prop>
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
            </props>
        </property>
        <property name="mappingResources">
            <list>
                <value>zwh/struts/maven/po/User.hbm.xml</value>
            </list>
        </property>
    </bean>
    <bean
        id="userDao"
        class="zwh.struts.maven.dao.impl.UserDaoDerbyImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>
    <bean
        id="userService"
        class="zwh.struts.maven.service.impl.UserServiceImpl">
        <property name="userDao">
            <ref bean="userDao"/>
        </property>
    </bean>
    <bean
        id="loginAction"
        class="zwh.struts.maven.action.LoginAction"
        scope="prototype">
        <property name="userService">
            <ref bean="userService"/>
        </property>
    </bean>
    <bean
        id="serviceAdvice"
        class="zwh.struts.maven.aop.ServiceAdvice"></bean>
    <bean
        id="daoAdvice"
        class="zwh.struts.maven.aop.DaoAdvice"></bean>
    <aop:config>
        <aop:aspect
            id="serviceAdviceAspect"
            ref="serviceAdvice">
            <!-- around和before之间，around和after之间，谁配置在前面谁首先被执行 -->
            <aop:before
                pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))"
                method="before"/>
            <aop:after-returning
                pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))"
                method="afterReturning"
                returning="rvt"/>
            <aop:after
                pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))"
                method="after"/>
            <aop:around
                pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))"
                method="around"/>
        </aop:aspect>
        <aop:aspect
            id="daoAdviceAspect"
            ref="daoAdvice">
            <aop:after-returning
                pointcut="execution(* zwh.struts.maven.dao.impl.*.*(..))"
                method="afterReturning"
                returning="rvt"/>
        </aop:aspect>
    </aop:config>

</beans>
