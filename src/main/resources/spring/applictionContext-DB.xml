<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
			xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
			xmlns:p="http://www.springframework.org/schema/p"
			xmlns:context="http://www.springframework.org/schema/context"
			xmlns:jaxws="http://cxf.apache.org/jaxws"
			xmlns:aop="http://www.springframework.org/schema/aop"
			xmlns:tx="http://www.springframework.org/schema/tx"
			xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context-3.0.xsd
	        http://www.springframework.org/schema/aop 
	        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://cxf.apache.org/jaxws 
            http://cxf.apache.org/schemas/jaxws.xsd"
            default-autowire="byName" default-lazy-init="true">   
     
   
    <bean
        id="dataSource"
        class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName">
            <value>org.logicalcobwebs.proxool.ProxoolDriver</value>
        </property>
        <property name="url">
            <value>classpath:proxool/proxool.xml</value>
        </property>
    </bean>
    
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource">
            <ref bean="dataSource"/>
        </property>
        <property name="configLocation"
        	value="classpath:hibernate.cfg.xml">
 		</property>
    </bean>
    
    <!-- <bean
        id="userDao"
        class="zwh.struts.maven.dao.impl.UserDaoDerbyImpl">
        <property name="sessionFactory">
            <ref bean="sessionFactory"/>
        </property>
    </bean>
    <bean
        id="userService"
        class="zwh.struts.maven.service.impl.UserServiceImpl">
        <property name="userDao">
            <ref bean="userDao"/>
        </property>
    </bean>
    <bean
        id="loginAction"
        class="zwh.struts.maven.action.LoginAction"
        scope="prototype">
        <property name="userService">
            <ref bean="userService"/>
        </property>
    </bean>
    <bean
        id="serviceAdvice"
        class="zwh.struts.maven.aop.ServiceAdvice"></bean>
    <bean
        id="daoAdvice"
        class="zwh.struts.maven.aop.DaoAdvice"></bean>
    <aop:config>
        <aop:aspect
            id="serviceAdviceAspect"
            ref="serviceAdvice">
            around和before之间，around和after之间，谁配置在前面谁首先被执行
            <aop:before
                pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))"
                method="before"/>
            <aop:after-returning
                pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))"
                method="afterReturning"
                returning="rvt"/>
            <aop:after
                pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))"
                method="after"/>
            <aop:around
                pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))"
                method="around"/>
        </aop:aspect>
        <aop:aspect
            id="daoAdviceAspect"
            ref="daoAdvice">
            <aop:after-returning
                pointcut="execution(* zwh.struts.maven.dao.impl.*.*(..))"
                method="afterReturning"
                returning="rvt"/>
        </aop:aspect>
    </aop:config> -->

</beans>
