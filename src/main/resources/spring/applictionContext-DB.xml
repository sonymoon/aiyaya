<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jaxws="http://cxf.apache.org/jaxws" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/context
	        http://www.springframework.org/schema/context/spring-context-3.0.xsd
	        http://www.springframework.org/schema/aop 
	        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://cxf.apache.org/jaxws 
            http://cxf.apache.org/schemas/jaxws.xsd"
	default-autowire="byName" default-lazy-init="true">


	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>com.mysql.jdbc.Driver</value>
		</property>
		<property name="jdbcUrl">
			<value>jdbc:mysql://127.0.0.1:3306/webapp?useUnicode=true&amp;characterEncoding=UTF-8
			</value>
		</property>
		<property name="user">
			<value>root</value>
		</property>
		<property name="password">
			<value>root</value>
		</property>
		<!--连接池中保留的最小连接数。 -->
		<property name="minPoolSize">
			<value>5</value>
		</property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize">
			<value>30</value>
		</property>
		<!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize">
			<value>5</value>
		</property>
		<!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime">
			<value>60</value>
		</property>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement">
			<value>5</value>
		</property>

		<property name="testConnectionOnCheckout">
			<value>false</value>
		</property>
		<property name="checkoutTimeout">
			<value>2000</value>
		</property>
		<property name="automaticTestTable">
			<value>test</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>120</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>3</value>
		</property>
		<property name="acquireRetryDelay">
			<value>1000</value>
		</property>
		<property name="debugUnreturnedConnectionStackTraces">
			<value>true</value>
		</property>
		<property name="debugUnreturnedConnectionStackTraces">
			<value>true</value>
		</property>
		<property name="unreturnedConnectionTimeout">
			<value>180</value>
		</property>
	</bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="mappingResources">
			<list>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>				
				<prop key="hibernate.connection.provider_class">org.hibernate.connection.C3P0ConnectionProvider</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.autoReconnect">true</prop>
				<prop key="hibernate.jdbc.fetch_size">20</prop>
				<prop key="hibernate.jdbc.batch_size">20</prop>
			</props>
		</property>
	</bean>

	<!-- <bean id="userDao" class="zwh.struts.maven.dao.impl.UserDaoDerbyImpl"> 
		<property name="sessionFactory"> <ref bean="sessionFactory"/> </property> 
		</bean> <bean id="userService" class="zwh.struts.maven.service.impl.UserServiceImpl"> 
		<property name="userDao"> <ref bean="userDao"/> </property> </bean> <bean 
		id="loginAction" class="zwh.struts.maven.action.LoginAction" scope="prototype"> 
		<property name="userService"> <ref bean="userService"/> </property> </bean> 
		<bean id="serviceAdvice" class="zwh.struts.maven.aop.ServiceAdvice"></bean> 
		<bean id="daoAdvice" class="zwh.struts.maven.aop.DaoAdvice"></bean> <aop:config> 
		<aop:aspect id="serviceAdviceAspect" ref="serviceAdvice"> around和before之间，around和after之间，谁配置在前面谁首先被执行 
		<aop:before pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))" 
		method="before"/> <aop:after-returning pointcut="execution(* zwh.struts.maven.service.impl.*.*(..))" 
		method="afterReturning" returning="rvt"/> <aop:after pointcut="execution(* 
		zwh.struts.maven.service.impl.*.*(..))" method="after"/> <aop:around pointcut="execution(* 
		zwh.struts.maven.service.impl.*.*(..))" method="around"/> </aop:aspect> <aop:aspect 
		id="daoAdviceAspect" ref="daoAdvice"> <aop:after-returning pointcut="execution(* 
		zwh.struts.maven.dao.impl.*.*(..))" method="afterReturning" returning="rvt"/> 
		</aop:aspect> </aop:config> -->

</beans>
